package com.unrealedz.wstation.fragments;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.unrealedz.wstation.R;
import com.unrealedz.wstation.entity.ForecastDay;
import com.unrealedz.wstation.utils.Utils;

import android.app.Activity;
import android.app.Fragment;
import android.content.Context;
import android.database.Cursor;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;


public class FragmentDayHours extends Fragment {
	
	public static interface HoursCallBack{
		public void setHourInfo(int hour);
	}
	
	HoursCallBack hoursCallBack;
	
	List<ForecastDay> forecastDays;
	
	int tmin;
	int tmax;
	int id_image;
	int hour;
	
	Context context;
	
	TextView tvHour3;
	TextView tvHour9;
	TextView tvHour15;
	TextView tvHour21;
	
	ImageView imageView3;
	ImageView imageView9;
	ImageView imageView15;
	ImageView imageView21;
	
	TextView tvHourTemp3;
	TextView tvHourTemp9;
	TextView tvHourTemp15;
	TextView tvHourTemp21;
	
	LinearLayout lenearLayout3;
	LinearLayout lenearLayout9;
	LinearLayout lenearLayout15;
	LinearLayout lenearLayout21;
	
	List<TextView> tvHours;
	List<ImageView> imHours;
	List<TextView> txHoursTemp;
	View v;
	LinearLayout linearLayout;
	
	@Override
	  public View onCreateView(LayoutInflater inflater, ViewGroup container,
	      Bundle savedInstanceState) {

		View v = inflater.inflate(R.layout.fragment_day_hours, container, false);
		linearLayout = (LinearLayout) v.findViewById(R.id.linearLayoutHours);
		
		context = container.getContext();
		tvHour3 = (TextView) v.findViewById(R.id.tvHour3);
		tvHour9 = (TextView) v.findViewById(R.id.tvHour9);
		tvHour15 = (TextView) v.findViewById(R.id.tvHour15);
		tvHour21 = (TextView) v.findViewById(R.id.tvHour21);
		tvHours = new ArrayList<TextView>();
		tvHours.add(tvHour3);
		tvHours.add(tvHour9);
		tvHours.add(tvHour15);
		tvHours.add(tvHour21);
		
		imageView3 = (ImageView) v.findViewById(R.id.imageView3);
		imageView9 = (ImageView) v.findViewById(R.id.imageView9);
		imageView15 = (ImageView) v.findViewById(R.id.imageView15);
		imageView21 = (ImageView) v.findViewById(R.id.imageView21);
		imHours = new ArrayList<ImageView>();
		imHours.add(imageView3);
		imHours.add(imageView9);
		imHours.add(imageView15);
		imHours.add(imageView21);
		
		tvHourTemp3 = (TextView) v.findViewById(R.id.tvTempMinMax3);
		tvHourTemp9 = (TextView) v.findViewById(R.id.tvTempMinMax9);
		tvHourTemp15 = (TextView) v.findViewById(R.id.tvTempMinMax15);
		tvHourTemp21 = (TextView) v.findViewById(R.id.tvTempMinMax21);
		txHoursTemp = new ArrayList<TextView>();
		txHoursTemp.add(tvHourTemp3);
		txHoursTemp.add(tvHourTemp9);
		txHoursTemp.add(tvHourTemp15);
		txHoursTemp.add(tvHourTemp21);
		
		lenearLayout3 = (LinearLayout) v.findViewById(R.id.linearLayout3);
		lenearLayout9 = (LinearLayout) v.findViewById(R.id.linearLayout9);
		lenearLayout15 = (LinearLayout) v.findViewById(R.id.linearLayout15);
		lenearLayout21 = (LinearLayout) v.findViewById(R.id.linearLayout21);
		lenearLayout3.setOnClickListener(new hourClickListener());
		lenearLayout9.setOnClickListener(new hourClickListener());
		lenearLayout15.setOnClickListener(new hourClickListener());
		lenearLayout21.setOnClickListener(new hourClickListener());
		setInfo();
		
	    return v;
	  }

	private void setInfo() {
		LinearLayout.LayoutParams linLayoutParam = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT, 0.25f);
		for(int i = 0; i < forecastDays.size(); i++){
			LinearLayout linearl = new LinearLayout(context);
			linearl.setLayoutParams(linLayoutParam);
			linearl.setGravity(Gravity.CENTER);
			linearl.setPadding(2, 2, 2, 2);
			linearl.setOrientation(LinearLayout.VERTICAL);
			linearl.setId(i);
			TextView tv = new TextView(context);
			TextView tvm = new TextView(context);
			ImageView im = new ImageView(context);
			tv.setId(i);
			tv.setId(i+20);
			im.setId(i+40);
			linearl.addView(tv);
			linearl.addView(im);
			linearLayout.addView(linearl);
			
			
				/*tvHours.get(i).setText(String.valueOf(forecastDays.get(i).getHour()) + ".00");
				imHours.get(i).setImageResource(Utils.getImageId(forecastDays.get(i).getPictureName(), context));
				String tempMinMax = forecastDays.get(i).getTemperatureMin() + "°" + "/" + forecastDays.get(i).getTemperatureMax() + "°";
				txHoursTemp.get(i).setText(tempMinMax);*/
			tv.setText(String.valueOf(forecastDays.get(i).getHour()) + ".00");
			im.setImageResource(Utils.getImageId(forecastDays.get(i).getPictureName(), context));
			String tempMinMax = forecastDays.get(i).getTemperatureMin() + "°" + "/" + forecastDays.get(i).getTemperatureMax() + "°";
			tvm.setText(tempMinMax);
			}							
		
	}

	public void setData(List<ForecastDay> forecastDays) {
		this.forecastDays = forecastDays;		
	}
	
	private class hourClickListener implements OnClickListener{
		
		@Override
		public void onClick(View v) {
			
		/*	switch(v.getId()){
			case R.id.linearLayout3: 
				hoursCallBack.setHourInfo(0);
				break;
			case R.id.linearLayout9: 
				hoursCallBack.setHourInfo(1);
				break;
			case R.id.linearLayout15: 
				hoursCallBack.setHourInfo(2);
				break;
			case R.id.linearLayout21: 
				hoursCallBack.setHourInfo(3);
				break;
			}*/
			
		}
	}

	@Override
	  public void onAttach(Activity activity) {
	    super.onAttach(activity);
	        try {
	        	hoursCallBack = (HoursCallBack) activity;
	        } catch (ClassCastException e) {
	            throw new ClassCastException(activity.toString() + " must implement HoursCallBack");
	        }
	  }

}
